"""create-tables

Revision ID: e1f318fcd6bc
Revises:
Create Date: 2025-09-23 18:06:26.264564

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "e1f318fcd6bc"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - adjusted ###
    op.create_table(
        "architecture",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "type",
            sa.Enum(
                "fastapi",
                "react_next",
                "react_vite",
                "spring_boot",
                name="architecturetypeenum",
            ),
            nullable=False,
        ),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("path", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_architecture_name"), "architecture", ["name"], unique=True)
    op.create_index(op.f("ix_architecture_path"), "architecture", ["path"], unique=True)
    op.create_index(
        op.f("ix_architecture_type"), "architecture", ["type"], unique=False
    )

    op.create_table(
        "database",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "name",
            sa.Enum(
                "sqlite", "postgresql", "mysql", "mongodb", name="databasetypeenum"
            ),
            nullable=False,
        ),
        sa.Column("description", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_database_name"), "database", ["name"], unique=True)

    op.create_table(
        "tag",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_tag_name"), "tag", ["name"], unique=True)

    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_index(op.f("ix_user_username"), "user", ["username"], unique=False)

    op.create_table(
        "architecturedatabaselink",
        sa.Column("architecture_id", sa.Integer(), nullable=False),
        sa.Column("database_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["architecture_id"],
            ["architecture.id"],
        ),
        sa.ForeignKeyConstraint(
            ["database_id"],
            ["database.id"],
        ),
        sa.PrimaryKeyConstraint("architecture_id", "database_id"),
    )

    op.create_table(
        "architecturetaglink",
        sa.Column("architecture_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["architecture_id"],
            ["architecture.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["tag.id"],
        ),
        sa.PrimaryKeyConstraint("architecture_id", "tag_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - adjusted ###
    op.drop_table("architecturetaglink")
    op.drop_table("architecturedatabaselink")
    op.drop_index(op.f("ix_user_username"), table_name="user")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_tag_name"), table_name="tag")
    op.drop_table("tag")
    op.drop_index(op.f("ix_database_name"), table_name="database")
    op.drop_table("database")
    op.drop_index(op.f("ix_architecture_type"), table_name="architecture")
    op.drop_index(op.f("ix_architecture_path"), table_name="architecture")
    op.drop_index(op.f("ix_architecture_name"), table_name="architecture")
    op.drop_table("architecture")
    # ### end Alembic commands ###
